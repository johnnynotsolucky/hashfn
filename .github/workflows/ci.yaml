name: CI

on:
  push:
  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustc-dev
      - run: cargo test --release --tests

  build:
    name: ${{matrix.name || format('Rust {0}', matrix.rust)}}
    runs-on: ${{matrix.os || 'ubuntu'}}-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, 1.37.0]
        include:
          - rust: nightly
            components: rustc-dev
          - rust: nightly
            name: WebAssembly
            target: wasm32-unknown-unknown
          - rust: nightly
            name: WASI
            target: wasm32-wasi
          - rust: nightly
            name: Windows
            os: windows
    env:
      target: ${{matrix.target && format('--target={0}', matrix.target)}}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
          components: ${{matrix.components}}
      - if: matrix.target
        run: rustup target add ${{matrix.target}}
      - run: cargo check ${{env.target}}

  docs:
    name: Docs
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: --cfg=doc_cfg -Dbroken_intra_doc_links
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test --doc
      - run: cargo doc

  msrv:
    name: Minimal versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo update -Z minimal-versions
      - run: cargo check

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@miri
      - run: cargo miri test
        env:
          MIRIFLAGS: -Zmiri-strict-provenance

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy,rustc-dev
      - run: cargo clippy --tests --benches -- -Dclippy::all -Dclippy::pedantic

  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/install@cargo-outdated
      - run: cargo outdated --exit-code 1
